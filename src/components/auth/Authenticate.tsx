import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import Image from 'next/image'
import React, { useState } from 'react'
import Loader from '../shared/Loader'
import axios from 'axios'
import { authurls } from '@/lib/urls'
import toast from 'react-hot-toast'
import { createCookie } from '@/app/serveractions/action'
import { useRouter } from 'next/navigation'


const Authenticate = ({signindata,setsignindata}:{signindata:any,setsignindata:(data:any)=>void}) => {
    const router = useRouter();
    const [code,setcode] = useState<string>();
    const [loading,setloading] = useState(false);

    const verify2fa = async()=>{
        setloading(true);
        try {
            const responce = await axios.post(authurls.verify2fa,
                {userid:signindata?.userid,code:code});   
            if(responce.status === 200){
                toast.success('Login successfull');
                await createCookie(responce?.data?.token);
                router.push("/");
                setsignindata(null);
            }
        } catch (error:any) {
            console.log(error)
            toast.error(error?.response?.data?.message || 'Failed to verify');
        }finally{
            setloading(false);
        }
    }

  return (
    <div className=' flex flex-col gap-5 items-center'>
        {
            signindata?.secretenabled && <h1 className=' font-bold text-2xl'>{signindata?.username}</h1>
        }
        <h1 className=' font-bold text-3xl'>Verify Your Identity</h1>
        <div className=' flex flex-col gap-5 p-4 rounded-md bg-secondary items-center'>
            <p className=' text-center'>To keep your account secure, we will verify your identity.</p>
            {
                signindata?.secretenabled ?<p className=' text-center'>Enter the code generated by your authenticator app.</p>:<>
                <p className=' text-center'>Scan the qr code given below using an authenticator app and enter the code to proceed</p>
                <Image src={signindata?.qrCode} width={200} height={200} alt='qr code'/>
                </>
            }
            <Input value={code} onChange={(e)=>setcode(e.target.value)} placeholder='Enter Verification code'/>

                {
                    loading?<Loader/>:(
                        <div className=' w-full flex   gap-3'>
                    <Button onClick={()=>setsignindata(null)} className='  w-full'>Cancel</Button>
                    <Button onClick={verify2fa} className='  w-full'>Verify</Button>
                    </div>
                    )
                }
            </div>
    </div>
  )
}

export default Authenticate;